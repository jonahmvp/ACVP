<?xml version="1.0" encoding="US-ASCII" ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes" ?>
<!-- generate a ToC -->
<?rfc tocdepth="4" ?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes" ?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-acvp-subsafeprimes-1.0" ipr="trust200902">
    <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->
    <!-- ***** FRONT MATTER ***** -->
    <front>
        <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->
        <title abbrev="Sym Alg JSON">ACVP SafePrimes Algorithm JSON Specification</title>
        <!-- add 'role="editor"' below for the editors if appropriate -->
        <!-- Another author who claims to be an editor -->
        <author fullname="Russell Hammett" initials="R.H." role="editor" surname="Hammett">
            <organization>HII-TSD</organization>
            <address>
                <postal>
                    <street>302 Sentinel Dr Suite 300</street>
                    <!-- Reorder these if your country does things differently -->
                    <city>Annapolis Junction </city>
                    <region>MD</region>
                    <code>20701</code>
                    <country>USA</country>
                </postal>
                <email>russell.hammett@hii-tsd.com</email>
                <!-- uri and facsimile elements may also be added -->
            </address>
        </author>
        <date month="January" year="2020" />
        <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
         in the current day and month for you. If the year is not the current one, it is
         necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
         purpose of calculating the expiry date).  With drafts it is normally sufficient to
         specify just the year. -->
        <!-- Meta-data Declarations -->
        <area>General</area>
        <workgroup>TBD</workgroup>
        <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
         If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->
        <keyword>acvp</keyword>
        <keyword>crypto</keyword>
        <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->
        <abstract>
            <t>This document defines the JSON schema for using SafePrimes algorithms with the ACVP specification.</t>
        </abstract>
    </front>
    <middle>
        <section title="Introduction">
            <t>The Automated Crypto Validation Protocol (ACVP) defines a mechanism to automatically verify the cryptographic implementation of a software or hardware crypto module. The ACVP specification defines how a crypto module communicates with an ACVP server, including crypto capabilities negotiation, session management, authentication, vector processing and more. The ACVP specification does not define algorithm specific JSON constructs for performing the crypto validation. A series of ACVP sub-specifications define the constructs for testing individual crypto algorithms. Each sub-specification addresses a specific class of crypto algorithms. This sub-specification defines the JSON constructs for testing SafePrimes algorithms using ACVP.</t>
            <section title="Requirements Language">
                <t>
                    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted in
                    <xref target="RFC2119">RFC 2119</xref>
                    .
                </t>
            </section>
        </section>
        <section anchor="supported_algs" title="Supported SafePrimes Algorithms">
            <t>The following SafePrimes algorithms MAY be advertised by the ACVP compliant cryptographic module:</t>
            <t>
                <list style="symbols">
                    <t>safePrimes / keyGen</t>
                    <t>safePrimes / keyVer</t>
                </list>
            </t>
        </section>
        <section anchor="test_types" title="Test Types and Test Coverage">
            <t>
                The ACVP server performs a set of tests on the specified SafePrimes algorithm in order to assess the
                correctness and robustness of the implementation. A typical ACVP validation session
                SHALL require multiple tests to be performed for every supported permutation of SafePrimes
                capabilities. This section describes the design of the tests used to validate
                implementations of the SafePrimes algorithms.
                <list style="testtype">
                    <t>
                    SafePrimes / keyGen "AFT" - Algorithm Functional Test. The IUT is REQUIRED for each test 
                    case provided, to generate a key pair based on a SafePrime group. This information is then
                    communicated to the ACVP server and validated.
                  </t>
                    <t>
                    SafePrimes / keyVer "AFT" - Algorithm Functional Test. The ACVP server generates a series of keys to communicate to the IUT. The IUT is REQUIRED
                    to determine the validity of the given the key pair, and safe prime group. 
                  </t>
                </list>
            </t>
            <section anchor="test_coverage" title="Test Coverage">
                <t>
                    The tests described in this document have the intention of ensuring an
                    implementation is conformant to
                    <xref target="SP800-56Ar3" />
                    ,
                    <xref target="RFC3526" />
                    ,
                    and
                    <xref target="RFC7919" />
                    .
                </t>
                <section anchor="requirements_covered" title="Requirements Covered">
                    <t>
                        <list>
                            <t>
                            SP800-56Ar3 - 5.6.1.1.1 Using the Approved Safe-Prime Groups. This ACVP server specification makes testing available/validatable for use in Safe-Prime Groups key generation for KAS-FFC as specified in SP800-56Ar3.
                          </t>
                            <t>
                                RFC3526 - All safe prime groups defined in this document are made available for testing via the ACVP server.
                            </t>
                            <t>
                                RFC7919 - All safe prime groups defined in this document are made available for testing via the ACVP server.
                            </t>
                        </list>
                    </t>
                </section>
                <section anchor="requirements_not_covered" title="Requirements Not Covered">
                    <t>
                        N/A
                    </t>
                </section>
            </section>
        </section>
        <section anchor="caps_reg" title="Capabilities Registration">
            <t>ACVP requires crypto modules to register their capabilities. This allows the crypto module to advertise support for specific algorithms, notifying the ACVP server which algorithms need test vectors generated for the validation process. This section describes the constructs for advertising support of SafePrimes algorithms to the ACVP server.</t>
            <t>The algorithm capabilities are advertised as JSON objects within the 'algorithms' value of the ACVP registration message. The 'algorithms' value is an array, where each array element is an individual JSON object defined in this section. The 'algorithms' value is part of the 'capability_exchange' element of the ACVP JSON registration message. See the ACVP specification for details on the registration message.</t>
            <section anchor="prereq_algs" title="Required Prerequisite Algorithms for SafePrimes Validations">
                <t>Each SafePrimes implementation relies on other cryptographic primitives. For example, SafePrimes uses an underlying SHA algorithm. Each of these underlying algorithm primitives must be validated, either separately or as part of the same submission. ACVP provides a mechanism for specifying the required prerequisites:</t>
                <texttable anchor="rereqs_table" title="Required SafePrimes Prerequisite Algorithms JSON Values">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <ttcol align="left">Valid Values</ttcol>
                    <ttcol align="left">Optional</ttcol>
                    <c>algorithm</c>
                    <c>a prerequisite algorithm</c>
                    <c>value</c>
                    <c>DRBG</c>
                    <c>No</c>
                    <c>valValue</c>
                    <c>algorithm validation number</c>
                    <c>value</c>
                    <c>actual number or "same"</c>
                    <c>No</c>
                    <c>prereqAlgVal</c>
                    <c>prerequistie algorithm validation</c>
                    <c>object with algorithm and valValue properties</c>
                    <c>see above</c>
                    <c>No</c>
                    <c>prereqVals</c>
                    <c>prerequistie algorithm validations</c>
                    <c>array of prereqAlgVal objects</c>
                    <c>see above</c>
                    <c>No</c>
                </texttable>
            </section>
            <section anchor="safePrimes_caps_reg" title="SafePrimes Algorithm Capabilities Registration">
                <t>Each algorithm capability advertised is a self-contained JSON object using the following values.</t>
                <texttable anchor="caps_table" title="SafePrimes Algorithm Capabilities JSON Values">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <ttcol align="left">Valid Values</ttcol>
                    <ttcol align="left">Optional</ttcol>
                    <c>algorithm</c>
                    <c>The algorithm under test</c>
                    <c>value</c>
                    <c>"safePrimes"</c>
                    <c>No</c>

                    <c>mode</c>
                    <c>The SafePrimes mode to be validated</c>
                    <c>value</c>
                    <c>"keyGen", "keyVer"</c>
                    <c>No</c>

                    <c>revision</c>
                    <c>The algorithm testing revision to use.</c>
                    <c>value</c>
                    <c>"1.0"</c>
                    <c>No</c>
                    <c>prereqVals</c>
                    <c>prerequistie algorithm validations</c>
                    <c>array of prereqAlgVal objects</c>
                    <c>
                        See
                        <xref target="prereq_algs" />
                    </c>
                    <c>No</c>

                    <c>safePrimeGroups</c>
                    <c>array of safe prime groups to test with.</c>
                    <c>array of string</c>
                    <c>
                        MODP-2048, MODP-3072, MODP-4096, MODP-6144, MODP-8192, ffdhe2048, ffdhe3072, ffdhe4096, ffdhe6144, ffdhe8192
                    </c>
                    <c>No</c>

                </texttable>
            </section>

            <section anchor="app-reg-safeprimes-keygen-ex" title="Example SafePrimes.KeyGen Registration">
                <t>The following is a example JSON object advertising support for SafePrimes KeyGen.</t>
                <figure>
                    <artwork>
                        <![CDATA[
    {
        "vsId": 0,
        "algorithm": "safePrimes",
        "mode": "keyGen",
        "revision": "1.0",
        "prereqVals": [{
            "algorithm": "DRBG",
            "valValue": "123456"
          },
        "isSample": true,
        "safePrimeGroups": [
            "ffdhe2048",
            "MODP-2048"
        ]
    }
                        ]]>
                    </artwork>
                </figure>
            </section>
            <section anchor="app-reg-safeprimes-keyver-ex" title="Example SafePrimes.KeyVer Registration">
                <t>The following is a example JSON object advertising support for SafePrimes KeyVer.</t>
                <figure>
                    <artwork>
                        <![CDATA[
    {
        "vsId": 0,
        "algorithm": "safePrimes",
        "mode": "keyVer",
        "revision": "1.0",
        "prereqVals": [{
            "algorithm": "DRBG",
            "valValue": "123456"
          },
        "isSample": true,
        "safePrimeGroups": [
            "ffdhe2048",
            "MODP-2048"
        ]
    }
                        ]]>
                    </artwork>
                </figure>
            </section>            
        </section>

        <section anchor="tv_keygen" title="SafePrimes.KeyGen">
            <section anchor="test_vectors_keyGen" title="Test Vectors SafePrimes.KeyGen">
                <t>The ACVP server provides test vectors to the ACVP client, which are then processed and returned to the ACVP server for validation. A typical ACVP validation session would require multiple test vector sets to be downloaded and processed by the ACVP client. Each test vector set represents an individual SafePrimes function. This section describes the JSON schema for a test vector set used with SafePrimes algorithms.</t>
                <t>The test vector set JSON schema is a multi-level hierarchy that contains meta data for the entire vector set as well as individual test vectors to be processed by the ACVP client.The following table describes the JSON elements at the top level of the hierarchy. </t>
                <texttable anchor="vs_keyver_top_table" title="Vector Set JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <c>acvVersion</c>
                    <c>Protocol version identifier</c>
                    <c>value</c>

                    <c>vsId</c>
                    <c>Unique numeric identifier for the vector set</c>
                    <c>value</c>

                    <c>algorithm</c>
                    <c>SafePrimes</c>
                    <c>value</c>

                    <c>mode</c>
                    <c>The SafePrimes mode used for the test vectors.</c>
                    <c>value</c>

                    <c>revision</c>
                    <c>The algorithm testing revision to use.</c>
                    <c>value</c>
                    <c>testGroups</c>
                    <c>
                        Array of test group JSON objects, which are defined in
                        <xref target="tgjs_keygen" />
                    </c>
                    <c>array</c>
                </texttable>
                <section title="Test Groups SafePrimes.KeyGen JSON Schema" anchor="tgjs_keygen">
                    <t>The testGroups element at the top level in the test vector JSON object is an array of test groups. Test vectors are grouped into similar test cases to reduce the amount of data transmitted in the vector set. For instance, all test vectors that use the same key size would be grouped together. The Test Group JSON object contains meta data that applies to all test vectors within the group. The following table describes the secure hash JSON elements of the Test Group JSON object.</t>
                    <t> The test group for SafePrimes is as follows:</t>
                    <texttable anchor="vs_tg_table5_keygen" title="Vector Group JSON Object">
                        <ttcol align="left">JSON Value</ttcol>
                        <ttcol align="left">Description</ttcol>
                        <ttcol align="left">JSON type</ttcol>
                        <ttcol align="left">Optional</ttcol>
                        
                        <c>testType</c>
                        <c>
                            The test type (AFT)
                        </c>
                        <c>string</c>
                        <c>No</c>

                        <c>safePrimeGroup</c>
                        <c>
                            The safe prime group that the IUT should use for generating keys.
                        </c>
                        <c>string</c>
                        <c>No</c>
                        
                        <c>tests</c>
                        <c>
                            Array of individual test vector JSON objects, which are defined in
                            <xref target="tvjs_keygen" />
                        </c>
                        <c>array</c>
                        <c>No</c>
                    </texttable>
                </section>
                <section title="Test Case SafePrimes.KeyGen JSON Schema" anchor="tvjs_keygen">
                    <t>Each test group contains an array of one or more test cases. Each test case is a JSON object that represents a single test vector to be processed by the ACVP client. The following table describes the JSON elements for each SafePrimes test vector.</t>
                    <texttable anchor="vs_tc_table5_keygen" title="Test Case JSON Object">
                        <ttcol align="left">JSON Value</ttcol>
                        <ttcol align="left">Description</ttcol>
                        <ttcol align="left">JSON type</ttcol>
                        <ttcol align="left">Optional</ttcol>
                        <c>tcId</c>
                        <c>Numeric identifier for the test case, unique across the entire vector set.</c>
                        <c>value</c>
                        <c>No</c>
                    </texttable>

                    <section anchor="app-vs-keygen-ex" title="Example Test Vectors SafePrimes.KeyGen JSON Object">
                        <t>The following is a example JSON object for SafePrimes.KeyGen test vectors sent from the
                                        ACVP server to the crypto module.</t>
                        <figure>
                        <artwork>
                            <![CDATA[
                            {
                                "vsId": 0,
                                "algorithm": "safePrimes",
                                "mode": "keyGen",
                                "revision": "1.0",
                                "isSample": true,
                                "testGroups": [
                                {
                                    "tgId": 1,
                                    "testType": "AFT",
                                    "tests": [
                                    {
                                        "tcId": 1
                                    },
                                    {
                                        "tcId": 2
                                    },
                                    {
                                        "tcId": 3
                                    }
                                    ],
                                    "safePrimeGroup": "ffdhe2048"
                                },
                                {
                                    "tgId": 2,
                                    "testType": "AFT",
                                    "tests": [
                                    {
                                        "tcId": 4
                                    },
                                    {
                                        "tcId": 5
                                    },
                                    {
                                        "tcId": 6
                                    }
                                    ],
                                    "safePrimeGroup": "MODP-2048"
                                }
                                ]
                            }            
                                ]]>
                        </artwork>
                        </figure>
                    </section>
                </section>
            </section>
            <section anchor="vector_responses_keygen" title="Test Vector Responses SafePrimes.KeyGen">
                <t>After the ACVP client downloads and processes a vector set, it must send the response vectors back to the ACVP server. The following table describes the JSON object that represents a vector set response.</t>
                <texttable anchor="vr_top_table_keygen" title="Vector Set Response JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <c>acvVersion</c>
                    <c>Protocol version identifier</c>
                    <c>value</c>

                    <c>vsId</c>
                    <c>Unique numeric identifier for the vector set</c>
                    <c>value</c>

                    <c>testResults</c>
                    <c>Array of JSON objects that represent each test vector result, as defined by the tables below</c>
                    <c>array</c>
                </texttable>
                <t>The following table describes the JSON object that represents a vector set response for SafePrimes.</t>
                <texttable anchor="vr_top_table5_keygen" title="Vector Set Response SafePrimes.KeyGen JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <ttcol align="left">Optional</ttcol>
                    <c>x</c>
                    <c>The private key component X</c>
                    <c>value</c>
                    <c>No</c>

                    <c>y</c>
                    <c>The public key component Y</c>
                    <c>value</c>
                    <c>No</c>
                </texttable>

                <section anchor="app-results-keygen-ex" title="Example Test Results SafePrimes.KeyGen JSON Object">
                    <t>The following is a example JSON object for SafePrimes.KeyGen test results sent from the
                                    crypto module to the ACVP server.</t>
                    <figure>
                    <artwork>
                        <![CDATA[
                [{
                        "acvVersion": <acvp-version>
                    },
                    {
                        "vsId": 0,
                        "algorithm": "safePrimes",
                        "mode": "keyGen",
                        "revision": "1.0",
                        "testGroups": [
                        {
                            "tgId": 1,
                            "tests": [
                            {
                                "tcId": 1,
                                "x": "399C088E4A1E1A03185A724FCB13FB8F7F1412489A18031C03987E3CEF57F21ED5545C0F365EB0F8D127792469B57CF139FCE379F0D6A0E1A5A76501BAFEBB28F09C499068B4E7E2B6BFB9F896AAF9E60B8A860D312C90DA4EFBE3593FFB1433F6BDDA5D27CC7C1C30C8B2AF2AA82597DC5EEF22CBF68883D0473F5DF32AE0CC86495A8F67F6C4D83F09E849892EC0B49C069C4010FB20C6F15F523F21BFBB136A811CFF192A36D2132333D1EF34F3A6D556AF1A63FC9586D5EBBF498473301DE2A1AE6D2069AEB61AB9F27AE3174E7C8FE8340259B4549A8D19042A8EF805A3985BBDB46ADAAA1FFC56A04D226631EA8AC8611240F0380BA32340977A18E342",
                                "y": "FADA8667E912677950AE640B07478FA5D1276CFC10D8908D9375AD31BD97BED5B5592F3752323075D3A53610624C8206B929AE14D1B0D0237AE6EA7E8EE3C7EB4378FA9A409A6FF5428AF7F392E65D689B2A91B537333F35A5FB54D13C46C63C163AD7F855489AB7B140BFAF261B070F11046306DA2D450E7F17A438BD685AA9C47F7EC7F0FC748755CD35A8AA59A7FAC1346704D8CCE17760E1BEC0A552A4723A19FA76C867605E1C43F450A0CB33772D2D3B5D7D722E38CD71B1BFB51080CDA45D706ED57EA2AADCA47C7A7D21096A14B22124A4F46CD2BA7699D76944A866850850BA4237A2C2D5457E7BE94AAEEE842AEBA94A694083BACC1E1B25561388"
                            },
                            {
                                "tcId": 2,
                                "x": "6DB3138EF400DDA756098A3AE528E00B665D448B166193CFED30AF69F5C306FC59363EEB10E37C70EDB500E964DB5E5360752F022B185D4F29AD7C8706D2C182CBE2915CA4AD40C1BB84ABE4AFEED0D3B8DE6241290FE8112FCAA3380D58A14BE9BDC2C92D21FB4F410DA155A41DC5A28772593BB9AA08C417066CD63DC5FB74C69EE169241ED9963BD3F8FA2A0BF6CFA331D8DB6405A631C3FD795193B257BA87FBE486BE3A9F7CBA61F523ACF65B0EE832F0952AEBA31CC608A2BEBD63C2953B489D817B63B805543B6E8922FE6E95BC4EA717DD69BE24460EB0B66C24957896FDF907FB550B30D7A23082111F79D66EDECF5292D6D7F11719B206D1030578",
                                "y": "70AACAB9A69AFE62CD3F763092FF9DEB9725345DBDFA66C8B019EBA84D0EDAA0BA6AAF1DA85151915FF45343BEBB5124824F2D9E268CDF16428A125CA2844D8DE34AAC016B0C6464BEBD49A262F8B520652F75973AEBA903C6316F4611C2F7276B0A23246FF5AAA2F7B81366FA38A00F69015B7B4135F54A8FFF55F06FAB6C4EEFDA0D7C2981F9593B9981D0100B2D52552CC3D77793059F98AA41F27F2AF1D585E78E1C694EADF10FD61BA64201CE7DB5FEFBF650E6AE1A3FCE31DEACBBF0119F6ADDE51FBBDCA5531557D604525DF0008DCC2CEA9325BF85FA323EAD012D1B28C0BE0E10143D9F3A24CFC5888C606307169EAE0E3F5B26F7D58CB6867455EB"
                            },
                            {
                                "tcId": 3,
                                "x": "099B19789CF2239F8FC5B340F5BC073840536B13692B1CFCEC307A1E52D26EC3D82FE769BE1B7A2A8F498917DCED5D6C51A7A3B7A676485B680615E3D5B464EF5C1858810C9024E9D00853A9AF043D2B2453C07EDAB080BB985AF2E70E90DA92A798AC42773925AC2D5363194BBC36A686CB4589AD8B08FE6D423CC5C0D52DF07817A8940B5DC5C9B94452AE1E6630590CAA4F6A89923A2A456AEC8AF7904FB8A5994FCDB4CDD45880752DBE507978AC94A8695E13F907CA1E31E72C4D86066BFBB268C799163789BF9D826D0BFC8DF7671AB449E605B5C7FE51FD59AF76843EB2E89302F529FAE30072CA34C2AB88CD6F5D03660B28188F0805C24671990C66",
                                "y": "C8F7038CB275E50F8A27D04003E6CD86042FFE0006A2193668D96ACB3E5D1167BB4E8CA3774A82F4E10FF2B45FA5AAD9F4CAF8DF048F9B4BFD8761E88E24B795DE9B56623562342145311AA4B1B7F3E97051ED7D21A6EA8BA8F55283C979503948CB9E33CE0002B2EB8B61622A2EDD205C04E568821AE82B8B2E1397E9A7429ED7DD2B60BD31045FDD7D718CC447886B1A0AD73EA41137ABF8DDD7B9994990637DECAD21BFFA04E6B1C1CFA2C529DDE7288F6ABB6796CC09A54CAD02B1B92C16434102D9374F2B64A9CDC3A8F42D8C87F60EABE397AEA72C1461BB729738FD86A8D057655D613581349CA274D9AC9A12A420C9268C2C23CA97BDE5ED60448B12"
                            }
                            ]
                        },
                        {
                            "tgId": 2,
                            "tests": [
                            {
                                "tcId": 4,
                                "x": "248091D90CB00F58EF091E00118F0C187338D8B18E9DF081C2CBACD10AD180242DE0CEAD69D6A20F11AB5B30111ADCE40583FA7F2A02442EA5D1C78A828D424806DC9DC4BCD447A01DF9F4BDBDB5BA442704504F06040E99AA36544A19FE97BC89A19D836AC08C39239F644EC38094E0FC2D45CDD17384F9472B65915403B27B6DDE77B5C37DA14633EE40F5D5AE786AEF78386A50E88F71676AF54986FD4B229D4BDC49F2AE9A341F9335B147317F9704B32DE349920810C312E3A81CD4C66207590C779D95DF11CCC1E34E95DDFA145AE5D286944D790A1D30595F047188D019610A0EE8BE303824B09F9ED60C51E29B3A5C2206D0D660761A52BA7A07E8E7",
                                "y": "C08BF18980879C066EC7E5B2BECB00B52D448E673A6C46D6F6DDF3D6C6D34F59F217290CF8959851992870B17531ED4F6878CF18D07D5C99E22D76A2193C7FF2AC4D87D4E9D21479CDE719CC2AA46FD801C450106C52385C49F8A7C8CFE25AEB8328A7BF1546C7DB9E327EB2C37F89A82E957757E51B3DBABF7EF7131EE7EE0C5FB9D505B6E5EBBA308642E9C29778803FF6D13E73558E5C98FCF2327EEA69ADA11D67518B0092BD529367BACF72F3E8C968F4FA2139FCB137BA6387C9AE8353FE6A13784E55060AD4A8FC21C63F50960BDC7053E881367726564D868EE7C34CD52894D96BFACE5C34958CED401B728671162D4D4DC280CFE31A8586A9C168AF"
                            },
                            {
                                "tcId": 5,
                                "x": "74B61CE8B689BAA23B38F47F35C5CB0ABC09A5306B78D821317CBCAFD22E2FC811A60718BA109D836F0A9AF8B2E220FE0DB4A098F98683580EBC0EA82CEC3C20C37E6289AFA1D59C5BB6DDE04F2DCDD34F19EB8E0D9A957D188FED04991D499625CC8A0362967FAFC5C4242D9D3E3D639B4E2EE5641C6CE3C75A5CE4F6BE92AF83D4B70FDA09F97B47D26FB13DED94BDCDB301D3FA5534F5B51B031FA4B948C626AB4F075268EC39B23054A9D7E2551E0F6E746C1A8F421B762A086C429EEE2DED9544DC9B44E4BB3D40CA66DB14B3DB5550FDB391E99CAC008758C4FC52BBBA11090DA2DA77D2B7896B1E0318D1C6DDBC6CCEE65F77E0FE80570C0936704A3F",
                                "y": "8EE385FFA770C9C9BF2FCBF9B9C16796226EF0C946B868CB0378D88DAA629342CF7702CD50D48747168BCACD62CB10D60048BB1A848879A853A14D4A7BD18C1649CC2B4C8E6E7B6B0E3FA174EBFF91F97B6F4D806CDD3ED9D8DBC11E9DF5537F186EA6B5BA811949CF2790E928B97D3056C342F72E96F3A95AEFE3C3470F10017926739DB41BA4D2AAEA3E1067CAEB48FB2D28FC4AC4962614D33CE68A9B246B333654AFBBD223B903266FB04EA571B48AC6D518C78D1BED892985FE1CC7BB8558E4B35AED4E2C898C159B9848EA4800CCEA4AC77208C688288582ABE01B07F427A5B5599A1B38653CF800CD509601B76A306745712048A7E805F1AF73AEC6AB"
                            },
                            {
                                "tcId": 6,
                                "x": "2B73FF75B0A20D99D00B67EEABB74FDE1F049D53516055E12E88FFBF2D92A6E11484039C9D59A78D1567C208686D1DA6D1140C8AC962E00CFEEAFFDE13949CEFD6516BA718A47CB20D10F53B2F90404187622136E7F64450700DD28080114E061CB7EA000EA979CDCFB4F7E5F7C2475EAD1F9C66CA443E2527860E986625EB3715CF915E4617C2EFAA937658323C64262ED63CBFA9E6864F6135856350916282B3DB8BC7070B807F19CB0E54901600F11ACD1BBD52D5CF453AD2D9214B839E6E66206845F3A1AFE346931C7372651DB3B56C3CE3E0A89E0135BACBA4CFB0D7783462759A7A7B975561A4CB1DFE5AF64DA4796BA1E84DB8FE487493078BFA86F9",
                                "y": "4BF4509C0258E8E484D5D1F22A2DB5FD23CE358F31754971167AB26419770D20BF94F2AF0693717EC11D48C0038D0EC0EFD4706A5B0B8340C7E612D1994B87658FB70EAE8E9DF72CF0C740C06C3A0A00413080571DA96F94FB7D45942EECDC823323EF65D7BE25FE6C17107694CF6B2B2DC685A07366D1E6F3015A804DF2739CAD037C66E4A0678BAC24FFFA36A5932D0ABC2F083C41B9AAE41D1CA9528CFA1BDC68711BC31E0FD735B29594EBF7107657CA0D827F2747A59E42E180DEEF2FADF7EDAE1AE0EC1E76F49F7C62449632BCF2B684F6A10629C67D863C776AB7D5B40979454CB721FFFE83A7C7E431A739A8A9BECD4C03C6694A8D55C0BB7AEE2996"
                            }
                            ]
                        }
                        ]
                    }
                ]
                            ]]>
                    </artwork>
                    </figure>
                </section>
            </section>
        </section>

        <section anchor="tv_keyver" title="SafePrimes.KeyVer">
            <section anchor="test_vectors_keyver" title="Test Vectors SafePrimes.KeyVer">
                <t>The ACVP server provides test vectors to the ACVP client, which are then processed and returned to the ACVP server for validation. A typical ACVP validation session would require multiple test vector sets to be downloaded and processed by the ACVP client. Each test vector set represents an individual SafePrimes function. This section describes the JSON schema for a test vector set used with SafePrimes algorithms.</t>
                <t>The test vector set JSON schema is a multi-level hierarchy that contains meta data for the entire vector set as well as individual test vectors to be processed by the ACVP client.The following table describes the JSON elements at the top level of the hierarchy. </t>
                <texttable anchor="vs_keygen_top_table" title="Vector Set SafePrimes.KeyVer JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <c>acvVersion</c>
                    <c>Protocol version identifier</c>
                    <c>value</c>

                    <c>vsId</c>
                    <c>Unique numeric identifier for the vector set</c>
                    <c>value</c>

                    <c>algorithm</c>
                    <c>SafePrimes</c>
                    <c>value</c>

                    <c>mode</c>
                    <c>The SafePrimes mode used for the test vectors.</c>
                    <c>value</c>

                    <c>revision</c>
                    <c>The algorithm testing revision to use.</c>
                    <c>value</c>
                    <c>testGroups</c>
                    <c>
                        Array of test group JSON objects, which are defined in
                        <xref target="tgjs_keyver" />
                    </c>
                    <c>array</c>
                </texttable>
                <section title="Test Groups SafePrimes.KeyVer JSON Schema" anchor="tgjs_keyver">
                    <t>The testGroups element at the top level in the test vector JSON object is an array of test  groups. Test vectors are grouped into similar test cases to reduce the amount of data transmitted in the vector set. For instance, all test vectors that use the same key size would be grouped together. The Test Group JSON object contains meta data that applies to all test vectors within the group. The following table describes the secure hash JSON elements of the Test Group JSON object.</t>
                    <t> The test group for SafePrimes is as follows:</t>
                    <texttable anchor="vs_tg_table5_keyver" title="Vector Group SafePrimes.KeyVerJSON Object">
                        <ttcol align="left">JSON Value</ttcol>
                        <ttcol align="left">Description</ttcol>
                        <ttcol align="left">JSON type</ttcol>
                        <ttcol align="left">Optional</ttcol>
                        
                        <c>testType</c>
                        <c>
                            The test type (AFT)
                        </c>
                        <c>string</c>
                        <c>No</c>

                        <c>safePrimeGroup</c>
                        <c>
                            The safe prime group that the IUT should use for generating keys.
                        </c>
                        <c>string</c>
                        <c>No</c>
                        
                        <c>tests</c>
                        <c>
                            Array of individual test vector JSON objects, which are defined in
                            <xref target="tvjs_keyver" />
                        </c>
                        <c>array</c>
                        <c>No</c>
                    </texttable>
                </section>
                <section title="Test Case SafePrimes.KeyVer JSON Schema" anchor="tvjs_keyver">
                    <t>Each test group contains an array of one or more test cases. Each test case is a JSON object that represents a single test vector to be processed by the ACVP client. The following table describes the JSON elements for each SafePrimes test vector.</t>
                    <texttable anchor="vs_tc_table5_keyver" title="Test Case JSON Object">
                        <ttcol align="left">JSON Value</ttcol>
                        <ttcol align="left">Description</ttcol>
                        <ttcol align="left">JSON type</ttcol>
                        <ttcol align="left">Optional</ttcol>
                        <c>tcId</c>
                        <c>Numeric identifier for the test case, unique across the entire vector set.</c>
                        <c>value</c>
                        <c>No</c>

                        <c>x</c>
                        <c>The private key component X</c>
                        <c>value</c>
                        <c>No</c>

                        <c>y</c>
                        <c>The public key component Y</c>
                        <c>value</c>
                        <c>No</c>
                    </texttable>

                    <section anchor="app-vs-keyver-ex" title="Example Test Vectors SafePrimes.KeyVer JSON Object">
                        <t>The following is a example JSON object for SafePrimes.KeyVer test vectors sent from the
                                        ACVP server to the crypto module.</t>
                        <figure>
                        <artwork>
                            <![CDATA[
                            {
                                "vsId": 0,
                                "algorithm": "safePrimes",
                                "mode": "keyVer",
                                "revision": "1.0",
                                "isSample": true,
                                "testGroups": [
                                {
                                    "tgId": 1,
                                    "testType": "AFT",
                                    "tests": [
                                    {
                                        "tcId": 1,
                                        "x": "399C088E4A1E1A03185A724FCB13FB8F7F1412489A18031C03987E3CEF57F21ED5545C0F365EB0F8D127792469B57CF139FCE379F0D6A0E1A5A76501BAFEBB28F09C499068B4E7E2B6BFB9F896AAF9E60B8A860D312C90DA4EFBE3593FFB1433F6BDDA5D27CC7C1C30C8B2AF2AA82597DC5EEF22CBF68883D0473F5DF32AE0CC86495A8F67F6C4D83F09E849892EC0B49C069C4010FB20C6F15F523F21BFBB136A811CFF192A36D2132333D1EF34F3A6D556AF1A63FC9586D5EBBF498473301DE2A1AE6D2069AEB61AB9F27AE3174E7C8FE8340259B4549A8D19042A8EF805A3985BBDB46ADAAA1FFC56A04D226631EA8AC8611240F0380BA32340977A18E342",
                                        "y": "FADA8667E912677950AE640B07478FA5D1276CFC10D8908D9375AD31BD97BED5B5592F3752323075D3A53610624C8206B929AE14D1B0D0237AE6EA7E8EE3C7EB4378FA9A409A6FF5428AF7F392E65D689B2A91B537333F35A5FB54D13C46C63C163AD7F855489AB7B140BFAF261B070F11046306DA2D450E7F17A438BD685AA9C47F7EC7F0FC748755CD35A8AA59A7FAC1346704D8CCE17760E1BEC0A552A4723A19FA76C867605E1C43F450A0CB33772D2D3B5D7D722E38CD71B1BFB51080CDA45D706ED57EA2AADCA47C7A7D21096A14B22124A4F46CD2BA7699D76944A866850850BA4237A2C2D5457E7BE94AAEEE842AEBA94A694083BACC1E1B25561388"
                                    },
                                    {
                                        "tcId": 2,
                                        "x": "1DB3138EF400DDA756098A3AE528E00B665D448B166193CFED30AF69F5C306FC59363EEB10E37C70EDB500E964DB5E5360752F022B185D4F29AD7C8706D2C182CBE2915CA4AD40C1BB84ABE4AFEED0D3B8DE6241290FE8112FCAA3380D58A14BE9BDC2C92D21FB4F410DA155A41DC5A28772593BB9AA08C417066CD63DC5FB74C69EE169241ED9963BD3F8FA2A0BF6CFA331D8DB6405A631C3FD795193B257BA87FBE486BE3A9F7CBA61F523ACF65B0EE832F0952AEBA31CC608A2BEBD63C2953B489D817B63B805543B6E8922FE6E95BC4EA717DD69BE24460EB0B66C24957896FDF907FB550B30D7A23082111F79D66EDECF5292D6D7F11719B206D1030578",
                                        "y": "70AACAB9A69AFE62CD3F763092FF9DEB9725345DBDFA66C8B019EBA84D0EDAA0BA6AAF1DA85151915FF45343BEBB5124824F2D9E268CDF16428A125CA2844D8DE34AAC016B0C6464BEBD49A262F8B520652F75973AEBA903C6316F4611C2F7276B0A23246FF5AAA2F7B81366FA38A00F69015B7B4135F54A8FFF55F06FAB6C4EEFDA0D7C2981F9593B9981D0100B2D52552CC3D77793059F98AA41F27F2AF1D585E78E1C694EADF10FD61BA64201CE7DB5FEFBF650E6AE1A3FCE31DEACBBF0119F6ADDE51FBBDCA5531557D604525DF0008DCC2CEA9325BF85FA323EAD012D1B28C0BE0E10143D9F3A24CFC5888C606307169EAE0E3F5B26F7D58CB6867455EB"
                                    },
                                    {
                                        "tcId": 3,
                                        "x": "099B19789CF2239F8FC5B340F5BC073840536B13692B1CFCEC307A1E52D26EC3D82FE769BE1B7A2A8F498917DCED5D6C51A7A3B7A676485B680615E3D5B464EF5C1858810C9024E9D00853A9AF043D2B2453C07EDAB080BB985AF2E70E90DA92A798AC42773925AC2D5363194BBC36A686CB4589AD8B08FE6D423CC5C0D52DF07817A8940B5DC5C9B94452AE1E6630590CAA4F6A89923A2A456AEC8AF7904FB8A5994FCDB4CDD45880752DBE507978AC94A8695E13F907CA1E31E72C4D86066BFBB268C799163789BF9D826D0BFC8DF7671AB449E605B5C7FE51FD59AF76843EB2E89302F529FAE30072CA34C2AB88CD6F5D03660B28188F0805C24671990C66",
                                        "y": "C8F7038CB275E50F8A27D04003E6CD86042FFE0006A2193668D96ACB3E5D1167BB4E8CA3774A82F4E10FF2B45FA5AAD9F4CAF8DF048F9B4BFD8761E88E24B795DE9B56623562342145311AA4B1B7F3E97051ED7D21A6EA8BA8F55283C979503948CB9E33CE0002B2EB8B61622A2EDD205C04E568821AE82B8B2E1397E9A7429ED7DD2B60BD31045FDD7D718CC447886B1A0AD73EA41137ABF8DDD7B9994990637DECAD21BFFA04E6B1C1CFA2C529DDE7288F6ABB6796CC09A54CAD02B1B92C16434102D9374F2B64A9CDC3A8F42D8C87F60EABE397AEA72C1461BB729738FD86A8D057655D613581349CA274D9AC9A12A420C9268C2C23CA97BDE5ED60448B12"
                                    }
                                    ],
                                    "safePrimeGroup": "ffdhe2048"
                                },
                                {
                                    "tgId": 2,
                                    "testType": "AFT",
                                    "tests": [
                                    {
                                        "tcId": 4,
                                        "x": "248091D90CB00F58EF091E00118F0C187338D8B18E9DF081C2CBACD10AD180242DE0CEAD69D6A20F11AB5B30111ADCE40583FA7F2A02442EA5D1C78A828D424806DC9DC4BCD447A01DF9F4BDBDB5BA442704504F06040E99AA36544A19FE97BC89A19D836AC08C39239F644EC38094E0FC2D45CDD17384F9472B65915403B27B6DDE77B5C37DA14633EE40F5D5AE786AEF78386A50E88F71676AF54986FD4B229D4BDC49F2AE9A341F9335B147317F9704B32DE349920810C312E3A81CD4C66207590C779D95DF11CCC1E34E95DDFA145AE5D286944D790A1D30595F047188D019610A0EE8BE303824B09F9ED60C51E29B3A5C2206D0D660761A52BA7A07E8E7",
                                        "y": "C08BF18980879C066EC7E5B2BECB00B52D448E673A6C46D6F6DDF3D6C6D34F59F217290CF8959851992870B17531ED4F6878CF18D07D5C99E22D76A2193C7FF2AC4D87D4E9D21479CDE719CC2AA46FD801C450106C52385C49F8A7C8CFE25AEB8328A7BF1546C7DB9E327EB2C37F89A82E957757E51B3DBABF7EF7131EE7EE0C5FB9D505B6E5EBBA308642E9C29778803FF6D13E73558E5C98FCF2327EEA69ADA11D67518B0092BD529367BACF72F3E8C968F4FA2139FCB137BA6387C9AE8353FE6A13784E55060AD4A8FC21C63F50960BDC7053E881367726564D868EE7C34CD52894D96BFACE5C34958CED401B728671162D4D4DC280CFE31A8586A9C168AF"
                                    },
                                    {
                                        "tcId": 5,
                                        "x": "74B61CE8B689BAA23B38F47F35C5CB0ABC09A5306B78D821317CBCAFD22E2FC811A60718BA109D836F0A9AF8B2E220FE0DB4A098F98683580EBC0EA82CEC3C20C37E6289AFA1D59C5BB6DDE04F2DCDD34F19EB8E0D9A957D188FED04991D499625CC8A0362967FAFC5C4242D9D3E3D639B4E2EE5641C6CE3C75A5CE4F6BE92AF83D4B70FDA09F97B47D26FB13DED94BDCDB301D3FA5534F5B51B031FA4B948C626AB4F075268EC39B23054A9D7E2551E0F6E746C1A8F421B762A086C429EEE2DED9544DC9B44E4BB3D40CA66DB14B3DB5550FDB391E99CAC008758C4FC52BBBA11090DA2DA77D2B7896B1E0318D1C6DDBC6CCEE65F77E0FE80570C0936704A3F",
                                        "y": "8EE385FFA770C9C9BF2FCBF9B9C16796226EF0C946B868CB0378D88DAA629342CF7702CD50D48747168BCACD62CB10D60048BB1A848879A853A14D4A7BD18C1649CC2B4C8E6E7B6B0E3FA174EBFF91F97B6F4D806CDD3ED9D8DBC11E9DF5537F186EA6B5BA811949CF2790E928B97D3056C342F72E96F3A95AEFE3C3470F10017926739DB41BA4D2AAEA3E1067CAEB48FB2D28FC4AC4962614D33CE68A9B246B333654AFBBD223B903266FB04EA571B48AC6D518C78D1BED892985FE1CC7BB8558E4B35AED4E2C898C159B9848EA4800CCEA4AC77208C688288582ABE01B07F427A5B5599A1B38653CF800CD509601B76A306745712048A7E805F1AF73AEC6AB"
                                    },
                                    {
                                        "tcId": 6,
                                        "x": "1B73FF75B0A20D99D00B67EEABB74FDE1F049D53516055E12E88FFBF2D92A6E11484039C9D59A78D1567C208686D1DA6D1140C8AC962E00CFEEAFFDE13949CEFD6516BA718A47CB20D10F53B2F90404187622136E7F64450700DD28080114E061CB7EA000EA979CDCFB4F7E5F7C2475EAD1F9C66CA443E2527860E986625EB3715CF915E4617C2EFAA937658323C64262ED63CBFA9E6864F6135856350916282B3DB8BC7070B807F19CB0E54901600F11ACD1BBD52D5CF453AD2D9214B839E6E66206845F3A1AFE346931C7372651DB3B56C3CE3E0A89E0135BACBA4CFB0D7783462759A7A7B975561A4CB1DFE5AF64DA4796BA1E84DB8FE487493078BFA86F9",
                                        "y": "4BF4509C0258E8E484D5D1F22A2DB5FD23CE358F31754971167AB26419770D20BF94F2AF0693717EC11D48C0038D0EC0EFD4706A5B0B8340C7E612D1994B87658FB70EAE8E9DF72CF0C740C06C3A0A00413080571DA96F94FB7D45942EECDC823323EF65D7BE25FE6C17107694CF6B2B2DC685A07366D1E6F3015A804DF2739CAD037C66E4A0678BAC24FFFA36A5932D0ABC2F083C41B9AAE41D1CA9528CFA1BDC68711BC31E0FD735B29594EBF7107657CA0D827F2747A59E42E180DEEF2FADF7EDAE1AE0EC1E76F49F7C62449632BCF2B684F6A10629C67D863C776AB7D5B40979454CB721FFFE83A7C7E431A739A8A9BECD4C03C6694A8D55C0BB7AEE2996"
                                    }
                                    ],
                                    "safePrimeGroup": "MODP-2048"
                                }
                                ]
                            }            
                                ]]>
                        </artwork>
                        </figure>
                    </section>
                </section>
            </section>
            <section anchor="vector_responses_keyver" title="Test Vector Responses SafePrimes.KeyVer">
                <t>After the ACVP client downloads and processes a vector set, it must send the response vectors back to the ACVP server. The following table describes the JSON object that represents a vector set response.</t>
                <texttable anchor="vr_top_table_keyver" title="Vector Set Response JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <c>acvVersion</c>
                    <c>Protocol version identifier</c>
                    <c>value</c>

                    <c>vsId</c>
                    <c>Unique numeric identifier for the vector set</c>
                    <c>value</c>

                    <c>testResults</c>
                    <c>Array of JSON objects that represent each test vector result, as defined by the tables below</c>
                    <c>array</c>
                </texttable>
                <t>The following table describes the JSON object that represents a vector set response for SafePrimes.</t>
                <texttable anchor="vr_top_table5_keyver" title="Vector Set Response SafePrimes.KeyVer JSON Object">
                    <ttcol align="left">JSON Value</ttcol>
                    <ttcol align="left">Description</ttcol>
                    <ttcol align="left">JSON type</ttcol>
                    <ttcol align="left">Optional</ttcol>
                    <c>tcId</c>
                    <c>Numeric identifier for the test case, unique across the entire vector set.</c>
                    <c>value</c>
                    <c>No</c>
                    
                    <c>testPassed</c>
                    <c>The key is valid.</c>
                    <c>value</c>
                    <c>No</c>
                </texttable>

                <section anchor="app-results-keyver-ex" title="Example Test Results SafePrimes.KeyVer JSON Object">
                    <t>The following is a example JSON object for SafePrimes.KeyVer test results sent from the
                                    crypto module to the ACVP server.</t>
                    <figure>
                    <artwork>
                        <![CDATA[
                [{
                        "acvVersion": <acvp-version>
                    },
                    {
                        "vsId": 0,
                        "algorithm": "safePrimes",
                        "mode": "keyVer",
                        "revision": "1.0",
                        "testGroups": [
                        {
                            "tgId": 1,
                            "tests": [
                            {
                                "tcId": 1,
                                "testPassed": true
                            },
                            {
                                "tcId": 2,
                                "testPassed": false
                            },
                            {
                                "tcId": 3,
                                "testPassed": true
                            }
                            ]
                        },
                        {
                            "tgId": 2,
                            "tests": [
                            {
                                "tcId": 4,
                                "testPassed": true
                            },
                            {
                                "tcId": 5,
                                "testPassed": true
                            },
                            {
                                "tcId": 6,
                                "testPassed": false
                            }
                            ]
                        }
                        ]
                    }
                ]
                            ]]>
                    </artwork>
                    </figure>
                </section>
            </section>
        </section>
        <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->
        <section anchor="Acknowledgements" title="Acknowledgements">
            <t>TBD...</t>
        </section>
        <!-- Possibly a 'Contributors' section ... -->
        <section anchor="IANA" title="IANA Considerations">
            <t>This memo includes no request to IANA.</t>
        </section>
        <section anchor="Security" title="Security Considerations">
            <t>Security considerations are addressed by the ACVP specification.</t>
        </section>
    </middle>
    <!--  *****BACK MATTER ***** -->
    <back>
        <references title="Normative References">
            <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
            &RFC2119;
            <reference anchor="ACVP">
                <!-- the following is the minimum to make xml2rfc happy -->
                <front>
                    <title>ACVP Specification</title>
                    <author initials="authInitials" surname="authSurName">
                        <organization>NIST</organization>
                    </author>
                    <date year="2016" />
                </front>
            </reference>
            <reference anchor="SP800-56Ar3" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar3.pdf">
                <front>
                    <title>Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography</title>
                    <author>
                        <organization>NIST</organization>
                    </author>
                    <date month="April" year="2018" />
                </front>
            </reference>
            <reference anchor="RFC3526" target="https://tools.ietf.org/html/rfc3526">
                <front>
                    <title>More Modular Exponential (MODP) Diffie-Hellman groups for Internet Key Exchange (IKE)</title>
                    <author>
                        <organization></organization>
                    </author>
                    <date month="May" year="2003" />
                </front>
            </reference>
            <reference anchor="RFC7919" target="https://tools.ietf.org/html/rfc7919">
                <front>
                    <title>Negotiated Finite Field Diffie-Hellman Ephemeral Parameters for Transport Layer Security (TLS)</title>
                    <author>
                        <organization></organization>
                    </author>
                    <date month="August" year="2016" />
                </front>
            </reference>

        </references>
    </back>
</rfc>